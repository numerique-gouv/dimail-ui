stages:
  - hash_container
  - build_container
  - build_package
  - push_package

hash_container:
  stage: hash_container
  script:
    - echo "CONTAINER_HASH=`md5sum oxdev/Dockerfile | cut -c -32`" > build.env
  artifacts:
    reports:
      dotenv: build.env

build_container:
  stage: build_container
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  rules:
    - if : '$CI_COMMIT_TAG'
      when: never
    - changes:
        - oxdev/Dockerfile
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/oxdev/"
      --dockerfile "${CI_PROJECT_DIR}/oxdev/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CONTAINER_HASH}"

build_package:
  stage: build_package
  image:
    name: ${CI_REGISTRY_IMAGE}:${CONTAINER_HASH}
    entrypoint: [""]
  script:
    - cd src
    - npm install
    - grunt dpkg-buildpackage --include-dependencies
  artifacts:
    paths:
      - src/dist/dimail-ui_*_all.deb

push_package_from_commit:
  stage: push_package
  image:
    name: ${CI_REGISTRY_IMAGE}:${CONTAINER_HASH}
    entrypoint: [ "" ]
  script:
    - FILENAME=`basename src/dist/dimail-ui_*_all.deb`
    - 'curl --fail-with-body --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file src/dist/${FILENAME} "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ox-plugins/${CI_COMMIT_REF_SLUG}/${FILENAME}"'
  rules:
    - if : '$CI_COMMIT_TAG == null'

push_package_from_tag:
  stage: push_package
  image:
    name: ${CI_REGISTRY_IMAGE}:${CONTAINER_HASH}
    entrypoint: [ "" ]
  script:
    - FILENAME=`basename src/dist/dimail-ui_*_all.deb`
    - 'curl --fail-with-body --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file src/dist/${FILENAME} "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ox-plugins/${CI_COMMIT_TAG}/${FILENAME}"'
  rules:
    - if: $CI_COMMIT_TAG
