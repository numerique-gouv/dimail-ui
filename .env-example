# This config is used in codecept.conf.js to control the End-to-End tests
#
# Please see all infos inline. This file can be copied "as is" to provide a
# working example by using (cp .env-example .env)
# Change the values to your needs

# Base URL to do all provisioning requests (/webservices/${type} will be appended by codecept-helpers lib when using SOAP requests)
# Acutally this is the MW/Backend you will use for your tests. UI Team provides a working MW for tests in our In-House OpenStack (e2e-develop.ui.cloud.open-xchange.com)
PROVISIONING_URL=https://appsuite.k3s.os.oxui.de/

# context id to run the tests in
# If using a shared MW (like e2e-develop) you should use a clean, unused context to prevent colliding tests.
# Enter a random number in this case
CONTEXT_ID=4711

#puppeteer or webdriver (default is webdriver)
CODECEPT_DRIVER=puppeteer

# Selenium instance addresse
# When using the docker-compose file the selenium host is started
# as docker container locally. If you need a dedicated selenium host change this variable
SELENIUM_HOST=localhost

# App Suite UI URL used by automated browser
# The test Backend e2e-develop also provides a frontend which can be used to run the test
# Ensure this is sufficient for your use case. Most often you might want to run the tests
# against your local UI (during test and/or feature development). In this case use
# http(s)://host.docker.internal:8337/appsuite/ (Match the protocol to your local UI setup)
# If you use your local UI, ensure your local App Server is pointing to the MWyou are using
# in this file, otherwise the provisioning will not work!
LAUNCH_URL=http://e2e-develop.k3s.os.oxui.de/appsuite/

# Puppeteer headless vs. chromium
# When using puppeteer you could switch headless to false to allow live debugging in
# chromium. Further more you could provide optional startup arguments for chromium.
# HEADLESS=false

# CHROME_ARGS that might be helpful:
# CHROME_ARGS=--auto-open-devtools-for-tabs
# Needed on Linux:
# CHROME_ARGS=--no-sandbox

# SERVER (optional)
# this is the url used by appserver proxy as "target" (default: value of "appserver.server" in grunt/local.conf.js)
#
# FILESTORE_ID
# filestore ID used when creating the context to test in  (default: read from provisioning server)
#
# MX_DOMAIN
# the domain part of all e-mail addresses being used for testing. (default: read from default context of provisioning server)
